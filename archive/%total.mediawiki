In Twelf, a [[totality assertion]] for an LF [[type family]] is specified by a <tt>[[%mode]]</tt> declaration and a <tt>[[%worlds]]</tt> declarations. A '''<tt>%total</tt>''' declaration for a type family causes Twelf to attempt to verify the specified totality assertion.  Twelf does so by attempting to prove that the type family defines a total logic program.  The <tt>%total</tt> declaration is used both to verify properties of object-language [[judgment]]s and to check proofs of general [[metatheorem]]s.  

A <tt>%total</tt> declaration requires that [[%mode]] checking and [[%worlds]] checking have already succeeded.  
Then a '''<tt>%total</tt>''' declaration causes Twelf to run a number of analyses:
* '''[[Termination analysis]]''' - The syntax of a <tt>%total</tt> declaration is the same as a <tt>[[%terminates]]</tt> declaration, and Twelf runs its termination analysis with that information.  This verifies that the logic program always terminates when given [[ground]] inputs. 
* '''[[Coverage checking|Input coverage checking]]''' - Twelf uses the modes specified by the <tt>[[%mode]]</tt> declaration (<tt>[[%mode]]</tt> and <tt>[[%covers]]</tt> declarations also have the same syntax) to check input coverage.  This verifies that the logic program will match all possible ground inputs in the specified set of contexts.  
* '''[[Coverage checking|Output coverage checking]]''' - Twelf checks that the output of a [[subgoal]] can never fail to unify.  First, it checks for incorrect constant pattern-matching; next, it checks for [[output freeness]] violations. 

Taken together, these analyses verify that if the type family is run as a [[logic program]] in Twelf with ground derivations in the input positions, then it the execution will terminate successfully and will derive ground derivations in the output positions.  This proves the [[totality assertion]] for the type family:  
in any context conforming to the <tt>%worlds</tt> declaration, for any ground derivations in the input positions (as specified by the <tt>%mode</tt> declaration), there exist ground derivations for the output positions such that the type family is inhabited.

== See also ==
* Read the [[introductions to Twelf]] to learn more about <tt>%total</tt>.  The following sections of [[Proving metatheorems with Twelf]] are particularly relevant: [[Proving metatheorems:Proving totality assertions about the natural numbers|Proving totality assertions about the natural numbers]], [[Proving metatheorems:Proving metatheorems about the natural numbers|Proving metatheorems about the natural numbers]], [[Proving metatheorems:Proving totality assertions in non-empty contexts|Proving totality assertions in non-empty contexts]].
* {{guide|chapter=9|section=55|title=Totality}}

{{keyword|key=total}}
{{stub}}