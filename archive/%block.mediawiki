A '''<tt>%block</tt>''' declaration names a '''block''', which is a partial description of an LF context. Blocks are composed into [[regular worlds]] with <tt>[[%worlds]]</tt> declarations, which describe the complete set of possible contexts for a type family. This description of the context is an important part of the [[adequacy]] of the [[metatheorem]] established by a <tt>[[%total]]</tt> declaration.

A <tt>%block</tt> declaration acts more like a definition than other keywords, which generally cause Twelf to ''do'' something rather than ''define'' something. The obvious exception to this is [[define declaration|%define]].


== Sample <tt>%block</tt> declarations ==

These sample <tt>%block</tt> declarations are in the context of the definitions of <tt>exp</tt> and <tt>height</tt> in the <tt>[[%worlds]]</tt> article.

Using this block in a <tt>%worlds</tt> declaration means that arbitrary variables representing expressions can appear in the context:
<twelf>
%block var-rand : block {x : exp}.   
</twelf>

Using this block in a <tt>%worlds</tt> declaration means that variables representing expressions can appear in the context, but only if they are accompanied by a judgment that defines the height of that variable to be one.
<twelf>
%block var-height : block {x : exp}{_ : height x (s z)}.
</twelf>

Using this block in a <tt>%worlds</tt> declaration means that variables representing expressions can appear in the context, but only if they are accompanied by a judgment that defines the height of that variable to be some natural number.
<twelf>
%block var-heightN : some {N: nat} block {x : exp}{_ : height x N}.
</twelf>

== Block definitions ==

As of 1.7.1, block <i>definitions</i> are now supported. 

<twelf import="new">
typ : type.
exp : typ -> type.

%block typ-var : block {a : typ}.
%block exp-var : some {T : typ} block {x : exp T}.
%block vars = (typ-var | exp-var).
</twelf>

Using <tt>vars</tt> in a <tt>[[%worlds]]</tt> declaration is the same as using <tt>typ-var | exp-var</tt>, and in fact when Twelf prints out the <tt>%worlds</tt> declaration, block definitions will be automatically expanded.

<twelf import="new" check="decl">
%worlds (vars) (exp _).
</twelf>

== See also ==

* <tt>[[%worlds]]</tt>
* {{proving|title=Proving totality assertions in non-empty contexts}}
* [[Totality assertion]]
* {{guide|chapter=9|section=53|title=Regular Worlds}}

{{keyword|key=block}}