%{ Due Wednesday, December 3, by 11:59pm. Turn in as hw07.elf in your handin directory. }%

%{ == Definition == }%
%{ === Natural numbers === }%
%{ ==== On paper ==== 

 n ::= z | s n

}%

%{ ==== In Twelf ==== }%

nat : type.
z : nat.
s : nat -> nat.

%{ === Addition === }%
%{ ==== On paper ==== 

 ---------------- sum/z
 sum(z,n,n)

 sum(n,m,p)
 ---------------- sum/s
 sum(s(n),m,s(p))

}%

%{ ==== In Twelf ==== }%

sum : nat -> nat -> nat -> type.
sum/z : sum z N N.
sum/s : sum (s N) M (s P) <- sum N M P.

%{ === Less-than === }%
%{ ==== On paper ==== 

'''''QUESTION 1:''''' Give the inductive definition for the judgment <tt>n < n'</tt> that corresponds to to what is defined below.

}%

%{ ==== In Twelf ==== }%

lt : nat -> nat -> type.
lt/z : lt z (s N).
lt/s : lt (s N) (s M) <- lt N M.

%{ === Even/odd === }%
%{ ==== On paper ==== 

 ---------------- even/z
 even z

 odd n
 ---------------- even/s
 even s(n)

 even n
 ---------------- odd/s
 odd s(n)

}%

%{ ==== In Twelf ==== }%

even : nat -> type.
odd : nat -> type.

%{ '''''QUESTION 2:''''' Define in LF the rules for <tt>even</tt> and <tt>odd</tt> below. }% 




%{ == Proof: Sum Commutes == }%
%{ === Lemma:  N + 0 = N === }%
%{ ==== On paper ====

For all natural numbers <tt>n</tt>, <tt>sum(n,z,n)</tt>.

Proof by induction on <tt>n</tt>.

Case <tt>n=z</tt>. We need to show <tt>sum(z,z,z)</tt>, which we can show by rule <tt>sum/z</tt>.

Case <tt>n=s(n')</tt>. We need to show <tt>sum(s(n'),z,s(n'))</tt>. By the induction hypothesis, <tt>sum(n',z,n')</tt>. By rule <tt>sum/s</tt>, we have <tt>sum(s(n'),z,s(n'))</tt>.

}%

%{ ==== In Twelf ==== }%

sum-ident : {N: nat} sum N z N -> type.
%mode sum-ident +N -D. 

- : sum-ident z (sum/z : sum z z z).

- : sum-ident (s N) (sum/s D : sum (s N) z (s N))
   <- sum-ident N (D: sum N z N).

%worlds () (sum-ident _ _).
%total N (sum-ident N _).

%{ === Lemma: N + M = P implies N + (s M) = (s P) === }% 
%{ ==== On paper ====

'''''QUESTION 3:''''' State the "on paper" version of the lemma below.

}%

%{ ==== In Twelf ==== }%

sum-incr : sum N M P -> sum N (s M) (s P) -> type.
%mode sum-incr +D1 -D2.

- : sum-incr sum/z (sum/z : sum z (s N) (s N)).

- : sum-incr (sum/s D) (sum/s D' : sum (s N) (s M) (s (s P))) 
   <- sum-incr D (D': sum N (s M) (s P)).

%worlds () (sum-incr _ _).
%total D (sum-incr D _).





%{ === Theorem: N + M = P implies M + N = P === }%
%{ ==== On paper ====

If <tt>sum(n,m,p)</tt>, then <tt>sum(m,n,p)</tt>.

Proof by induction on the derivation of <tt>sum(n,m,p)</tt>.

Case sum/z:
 |            | n = z
 | ---------- | m = p 
 | sum(z,m,m) |

To show: <tt>sum(m,z,m)</tt>. Immediate by the first lemma.

Case sum/s:
 | sum(n',m,p')      | n = s(n')
 | ----------------- | p = s(p')
 | sum(s(n'),m,s(p') |

To show: <tt>sum(m,s(n'),s(p'))</tt>.

By the induction hypothesis, <tt>sum(m,n',p')</tt>. By the second lemma, <tt>sum(m,s(n'),s(p'))</tt>.

}%

%{ ==== In Twelf ==== }%

sum-commutes : sum N M P -> sum M N P -> type.
%mode sum-commutes +D1 -D2.

- : sum-commutes (sum/z : sum z N N) D
   <- sum-ident N (D : sum N z N).

- : sum-commutes (sum/s D : sum (s N) M (s P)) D''
   <- sum-commutes D (D': sum M N P)
   <- sum-incr D' (D'' : sum M (s N) (s P)).

%worlds () (sum-commutes _ _).
%total D (sum-commutes D _).

%{ === Theorem :  N + (s M) = P implies N < P === }%
%{ ==== On paper ==== 

If <tt>sum(n,s(m),p)</tt>, then <tt>n < p</tt>. Proof by induction on <tt>sum(n,s(m),p)</tt>.

Case <tt>sum/z</tt>:
 |                  | n = z
 | ---------------- | p = s(m)
 | sum(z,s(m),s(m)) |

To show: <tt>z < s(m)</tt>. Immediate by rule <tt>lt/z</tt>.

Case <tt>sum/s</tt>:
 | sum(n',s(m),p')       | n = s(n')
 | --------------------- | p = s(p')
 | sum(s(n'),s(m),s(p')) |

To show: <tt>s(n') < s(p')</tt>. 

By the induction hypothesis, <tt>n' < p'</tt>. By rule <tt>lt/s</tt>, we have <tt>s(n') < s(p')</tt>.

}%

%{ ==== In Twelf ==== }%

%{ '''''QUESTION 4:''''' State and prove the above theorem in Twelf. }%